"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RoundedPlayIcon = exports.PauseIcon = exports.MuteIcon = exports.DownloadIcon = exports.FullscreenIcon = exports.VolumeIcon = exports.PlayButtonIcon = void 0;

var _react = _interopRequireWildcard(require("react"));

var _this = void 0;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _newArrowCheck(innerThis, boundThis) { if (innerThis !== boundThis) { throw new TypeError("Cannot instantiate an arrow function"); } }

const PlayButtonIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_69",
    "data-name": "Group 69",
    transform: "translate(-9208 -7051)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_49",
    "data-name": "Rectangle 49",
    width: "100%",
    height: "100%",
    transform: "translate(9208 7051)",
    fill: "none"
  }), _react.default.createElement("path", {
    id: "play",
    d: "M13.262,6.74l-11-6.5A1.492,1.492,0,0,0,0,1.528v13a1.5,1.5,0,0,0,2.262,1.291l11-6.5A1.5,1.5,0,0,0,13.262,6.74Z",
    transform: "translate(9217 7058.968)",
    fill: "#fff"
  })));
}.bind(void 0));
exports.PlayButtonIcon = PlayButtonIcon;
const VolumeIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_70",
    "data-name": "Group 70",
    transform: "translate(-9246 -7051)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_50",
    "data-name": "Rectangle 50",
    width: "100%",
    height: "100%",
    transform: "translate(9246 7051)",
    fill: "none"
  }), _react.default.createElement("path", {
    id: "audio",
    d: "M8.063,18.06,4.727,21.4H.9a.9.9,0,0,0-.9.9v5.4a.9.9,0,0,0,.9.9H4.727L8.063,31.93A.9.9,0,0,0,9.6,31.294V18.7A.9.9,0,0,0,8.063,18.06Zm8.749-1.915a.907.907,0,1,0-1,1.517,8.761,8.761,0,0,1,0,14.668.907.907,0,1,0,1,1.517,10.576,10.576,0,0,0,0-17.7ZM18,25a6.924,6.924,0,0,0-3.216-5.859.9.9,0,0,0-1.242.28.911.911,0,0,0,.278,1.251,5.125,5.125,0,0,1,0,8.656.91.91,0,0,0-.278,1.251.9.9,0,0,0,1.242.28A6.923,6.923,0,0,0,18,25Zm-5.316-2.882a.9.9,0,0,0-.868,1.577,1.478,1.478,0,0,1,0,2.611.9.9,0,0,0,.868,1.577,3.279,3.279,0,0,0,0-5.765Z",
    transform: "translate(9251 7042.004)",
    fill: "#fff"
  })));
}.bind(void 0));
exports.VolumeIcon = VolumeIcon;
const DownloadIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_71",
    "data-name": "Group 71",
    transform: "translate(-9283 -7051)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_51",
    "data-name": "Rectangle 51",
    width: "100%",
    height: "100%",
    transform: "translate(9283 7051)",
    fill: "none"
  }), _react.default.createElement("path", {
    id: "download",
    d: "M14.53,50.082H.969A.966.966,0,0,1,0,49.113v-.969a.966.966,0,0,1,.969-.969H14.53a.966.966,0,0,1,.969.969v.969A.966.966,0,0,1,14.53,50.082ZM11.85,38.761,9.2,41.408v-8.44A.966.966,0,0,0,8.234,32H7.265a.966.966,0,0,0-.969.969v8.44L3.649,38.761a.965.965,0,0,0-1.368,0l-.686.686a.965.965,0,0,0,0,1.368l5.469,5.469a.965.965,0,0,0,1.368,0L13.9,40.815a.965.965,0,0,0,0-1.368l-.686-.686A.96.96,0,0,0,11.85,38.761Z",
    transform: "translate(9291 7026)",
    fill: "#fff"
  })));
}.bind(void 0));
exports.DownloadIcon = DownloadIcon;
const FullscreenIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_72",
    "data-name": "Group 72",
    transform: "translate(-9322 -7051)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_52",
    "data-name": "Rectangle 52",
    width: "100%",
    height: "100%",
    transform: "translate(9322 7051)",
    fill: "none"
  }), _react.default.createElement("g", {
    id: "baseline-fullscreen-24px_1_",
    "data-name": "baseline-fullscreen-24px (1)",
    transform: "translate(9322.04 7052.041)"
  }, _react.default.createElement("path", {
    id: "Path_7",
    "data-name": "Path 7",
    d: "M7.384,16.571H5V23h5.96V20.429H7.384ZM5,11.429H7.384V7.571H10.96V5H5Zm17.3,9H18.727V23h5.96V16.571H22.3ZM18.727,5V7.571H22.3v3.857h2.384V5Z",
    transform: "translate(0.96 0.96)",
    fill: "#fff"
  }))));
}.bind(void 0));
exports.FullscreenIcon = FullscreenIcon;
const MuteIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_74",
    "data-name": "Group 74",
    transform: "translate(-9246 -7091)"
  }, _react.default.createElement("path", {
    id: "mute",
    d: "M17.857,71.431l1.765-1.765a.624.624,0,0,0,0-.883L18.74,67.9a.624.624,0,0,0-.883,0l-1.765,1.765L14.326,67.9a.624.624,0,0,0-.883,0l-.883.883a.624.624,0,0,0,0,.883l1.765,1.765L12.561,73.2a.624.624,0,0,0,0,.883l.883.883a.624.624,0,0,0,.883,0L16.092,73.2l1.765,1.765a.624.624,0,0,0,.883,0l.883-.883a.624.624,0,0,0,0-.883Z",
    transform: "translate(9250 7035.996)",
    fill: "#fff"
  }), _react.default.createElement("g", {
    id: "Group_73",
    "data-name": "Group 73",
    transform: "translate(0 40)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_50",
    "data-name": "Rectangle 50",
    width: "100%",
    height: "100%",
    transform: "translate(9246 7051)",
    fill: "none"
  }), _react.default.createElement("path", {
    id: "audio",
    d: "M8.063,18.06,4.727,21.4H.9a.9.9,0,0,0-.9.9v5.4a.9.9,0,0,0,.9.9H4.727L8.063,31.93A.9.9,0,0,0,9.6,31.294V18.7A.9.9,0,0,0,8.063,18.06Z",
    transform: "translate(9251 7042.004)",
    fill: "#fff"
  }))));
}.bind(void 0));
exports.MuteIcon = MuteIcon;
const PauseIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props;
  return _react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    style: style,
    className: className
  }, _react.default.createElement("g", {
    id: "Group_76",
    "data-name": "Group 76",
    transform: "translate(-9158 -7051)"
  }, _react.default.createElement("path", {
    id: "pause",
    d: "M4.5,45h-3A1.5,1.5,0,0,1,0,43.5v-11A1.5,1.5,0,0,1,1.5,31h3A1.5,1.5,0,0,1,6,32.5v11A1.5,1.5,0,0,1,4.5,45ZM14,43.5v-11A1.5,1.5,0,0,0,12.5,31h-3A1.5,1.5,0,0,0,8,32.5v11A1.5,1.5,0,0,0,9.5,45h3A1.5,1.5,0,0,0,14,43.5Z",
    transform: "translate(9166.678 7028.805)",
    fill: "#fff"
  }), _react.default.createElement("g", {
    id: "Group_75",
    "data-name": "Group 75",
    transform: "translate(-50)"
  }, _react.default.createElement("rect", {
    id: "Rectangle_49",
    "data-name": "Rectangle 49",
    width: "32",
    height: "32",
    transform: "translate(9208 7051)",
    fill: "none"
  }))));
}.bind(void 0));
exports.PauseIcon = PauseIcon;
const RoundedPlayIcon = (0, _react.memo)(function (props) {
  _newArrowCheck(this, _this);

  const {
    style,
    className
  } = props,
        rest = _objectWithoutProperties(props, ["style", "className"]);

  return _react.default.createElement("svg", _extends({
    width: "84px",
    height: "84px",
    viewBox: "0 0 84 84",
    version: "1.1",
    style: style,
    className: className
  }, rest), _react.default.createElement("defs", null, _react.default.createElement("path", {
    d: "M0,2.9386527 C0,2.28519731 0.223131006,1.65038385 0.634115641,1.13457739 C1.6548224,-0.146461115 3.54612826,-0.37723598 4.85846551,0.619127301 L24.0377018,15.1805418 C24.2349507,15.3302987 24.4123298,15.5034474 24.5657455,15.6959919 C25.5864523,16.9770304 25.3500391,18.8232294 24.0377018,19.8195926 L4.85846551,34.3810072 C4.33005669,34.78219 3.67973327,35 3.01031244,35 C1.34776279,35 0,33.6843803 0,32.0614818 L0,2.9386527 Z",
    id: "rounded-play-inner-icon"
  })), _react.default.createElement("g", {
    id: "Page-1",
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, _react.default.createElement("g", {
    id: "Version-4-:-Test-with-new-input-fields",
    transform: "translate(-674.000000, -263.000000)"
  }, _react.default.createElement("g", {
    id: "Play-Button",
    transform: "translate(674.000000, 263.000000)"
  }, _react.default.createElement("g", {
    id: "Icons-/-1-Primary-/-Media-/-Video-/-01-Play",
    transform: "translate(33.000000, 25.000000)"
  }, _react.default.createElement("mask", {
    id: "mask-2",
    fill: "white"
  }, _react.default.createElement("use", {
    xlinkHref: "#rounded-play-inner-icon"
  })), _react.default.createElement("use", {
    id: "fill",
    fill: "#FFFFFF",
    fillRule: "nonzero",
    xlinkHref: "#rounded-play-inner-icon"
  })), _react.default.createElement("circle", {
    id: "Oval",
    fill: "#FFFFFF",
    opacity: "0.251929874",
    cx: "42",
    cy: "42",
    r: "42"
  })))));
}.bind(void 0));
exports.RoundedPlayIcon = RoundedPlayIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,